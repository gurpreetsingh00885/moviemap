{"version":3,"sources":["components/Home.jsx","components/Board.jsx","components/Sender.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","style","width","height","display","alignItems","justifyContent","Button","variant","size","maxWidth","margin","onClick","props","history","push","Component","Board","state","urlify","text","replace","url","axios","get","then","res","setState","data","id","loc","window","location","wsStart","protocol","endpoint","host","ws","WebSocket","onopen","console","log","onmessage","evt","message","JSON","parse","messages","index","onclose","catch","error","className","native","items","this","from","opacity","transform","enter","leave","show","div","background","renderHTML","code","src","alt","position","top","left","borderRadius","Sender","sendMessage","e","document","getElementById","send","stringify","value","connectWebSocket","boardId","fontSize","Form","Control","type","placeholder","onKeyDown","event","key","marginTop","Toast","onClose","delay","autohide","Body","as","maxHeight","preventDefault","rows","marginLeft","NotFound","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1cd6e0aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst classes = {\n  body: {\n    height : '100%',\n    width : '100%',\n  }\n};\n\nclass Home extends Component {\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <center>\n          <h1> Klips </h1>\n          A cross-platform clipboard\n          <br/><br/>\n          <h3>\n            What do you want to do?\n          </h3> <br/><br/>\n          <Button\n            variant=\"outline-primary\"\n            size=\"lg\"\n            style={{\n              display : \"block\",\n              width: '80%',\n              height: 80,\n              maxWidth : 500,\n              margin : 20\n            }}\n            onClick={() => this.props.history.push('/sender')}\n          >\n            Send\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            size=\"lg\"\n            style={{\n              display : \"block\",\n              width: '80%',\n              height: 80,\n              maxWidth : 500,\n              margin : 20\n            }}\n            onClick={() => this.props.history.push('/board')}\n          > \n            Receive\n          </Button>\n        </center>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport { Transition, animated } from 'react-spring/renderprops'\nimport renderHTML from 'react-render-html';\nimport Button from 'react-bootstrap/Button';\nimport '../styles.css'\nimport axios from 'axios'\n\nclass Board extends Component {\n  state = {\n    'index' : 0,\n    'messages' : [\"Text will appear here\", \"Text will appear here\"],\n    'code' : ''\n  };\n\n  //ws = new WebSocket('ws://localhost:8000/ws/');\n  urlify = (text) => {\n    var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    return text.replace(urlRegex, (url) => {\n        return '\\&nbsp\\;<a href=\"' + url + '\" target=\\\"_blank\\\">' + url + '</a>\\&nbsp\\;';\n    })\n  }\n\n  componentDidMount() {\n    axios.get('/api/id/issue')\n    .then((res) => {\n      this.setState({'code' : res.data.id});\n      var loc = window.location;\n        var wsStart = 'ws://';\n        if (loc.protocol == 'https:')\n          wsStart = 'wss://';\n        var endpoint = wsStart + loc.host + '/ws/board/' + res.data.id + '/';\n      this.ws = new WebSocket(endpoint);\n\n      this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected')\n      }\n\n      this.ws.onmessage = evt => {\n        // on receiving a message, add it to the list of messages\n        var message = JSON.parse(evt.data)['message'];\n        message = this.urlify(message);\n        var messages = this.state.messages;\n        messages[(this.state.index + 1) % 2] = message;\n        this.setState({ index: (this.state.index + 1) % 2, messages });\n      }\n\n      this.ws.onclose = () => {\n        console.log('disconnected')\n        // automatically try to reconnect on connection loss\n        var loc = window.location;\n        var wsStart = 'ws://';\n        if (loc.protocol == 'https:')\n          wsStart = 'wss://';\n        var endpoint = wsStart + loc.host + '/ws/board/' + res.data.id + '/';\n        this.setState({\n          ws: new WebSocket(endpoint),\n        })\n      }\n    })\n    .catch((error) => console.log(error));\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"simple-trans-main\">\n          <Transition\n            native\n            items = {this.state.index === 0}\n            from = {{ opacity: 1, transform: 'translate3d(0,100%,0)' }}\n            enter = {{ opacity: 1, transform: 'translate3d(0,0%,0)' }}\n            leave = {{ opacity: 1, transform: 'translate3d(0,-100%,0)' }}\n          >\n            {\n              show => show && (props => (\n                <animated.div style={{...props, background: 'lightpink'}}>\n                  {renderHTML(this.state.messages[0])}\n                </animated.div>\n              ))\n            }\n          \n          </Transition>\n          <Transition\n            native\n            items = {this.state.index === 1}\n            from = {{ opacity: 1, transform: 'translate3d(0,100%,0)' }}\n            enter = {{ opacity: 1, transform: 'translate3d(0,0%,0)' }}\n            leave = {{ opacity: 1, transform: 'translate3d(0,-100%,0)' }}\n          >\n            {\n              show => show && (props => (\n                <animated.div style={{ ...props, background: 'lightblue'}}>\n                  {renderHTML(this.state.messages[1])}\n                </animated.div>\n              ))\n            }\n          \n          </Transition>\n        </div>\n\n        <div className=\"floating\">\n          <center>\n            <div className=\"floating-label\"> <b>Board Id</b> </div>\n            <div className=\"floating-value\"> {this.state.code == '' ? <img src=\"https://i.imgur.com/MQkFKEt.gif\" alt=\"oops!\"/> : this.state.code} </div>\n          </center>\n        </div>\n        <Button variant=\"outline-secondary\" size=\"lg\" onClick = {() => this.props.history.push('/')} style={{ position: 'absolute', height: 60, width: 60, top: 10, left: 10, borderRadius: 50}}>&lt;</Button>\n      </div>\n    )\n  }\n}\n\nexport default Board\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\n\nclass Sender extends Component {\n  state = {\n    'boardId' : '',\n    show : true\n  }\n\n  ws = null;\n\n  render() {\n\n    const sendMessage = (e) => {\n      var text = document.getElementById('text');\n      this.ws.send(JSON.stringify({\n           'message': text.value\n       }))\n      text.value = '';\n    }\n\n    const connectWebSocket = (e) => {\n      var boardId = document.getElementById('board_id').value;\n      var loc = window.location;\n      var wsStart = 'ws://';\n      if (loc.protocol == 'https:')\n        wsStart = 'wss://';\n      var endpoint = wsStart + loc.host + '/ws/board/' + boardId + '/';\n\n      this.ws = new WebSocket(endpoint);\n\n      this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected')\n        this.setState({'boardId' : boardId});\n      }\n\n      this.ws.onmessage = evt => {\n        // on receiving a message, add it to the list of messages\n        const message = JSON.parse(evt.data);\n        console.log(message);\n      }\n\n      this.ws.onclose = () => {\n        console.log('disconnected')\n        // automatically try to reconnect on connection loss\n        this.setState({\n          boardId: ''\n        })\n      }\n\n    }\n\n    const onKeyDownConnect = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') {\n        connectWebSocket();\n      }\n    }\n\n    const onKeyDownSend = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        sendMessage();\n      }\n    }\n\n\n    if (this.state.boardId === '')\n      return (\n        <div style = {{ fontSize: 24, width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <center>\n            You need to connect to the receiver.<br/>\n            In order to do this, you will require the board Id.<br/>\n            You can find the board Id on the receiver.<br/><br/>\n            <Form.Control size=\"lg\" type=\"text\" id=\"board_id\" placeholder=\"Board ID\" style={{ width: '100%', maxWidth: 400 }} onKeyDown={onKeyDownConnect}/>\n            <Button variant=\"primary\" size=\"lg\" onClick = {connectWebSocket} style={{ marginTop: 20, width: '100%', maxWidth: 400 }}>Connect</Button>\n            <Button variant=\"outline-primary\" size=\"lg\" onClick = {() => this.props.history.push('/')} style={{ position: 'absolute', height: 60, width: 60, top: 10, left: 10, borderRadius: 50}}>&lt;</Button>\n          </center>\n        </div>\n      );\n\n    return (\n      <div style = {{ fontSize: 30, width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Toast onClose={() => this.setState({show: false})} style={{ position: 'absolute', top: 20 }} show={this.state.show} delay={3000} autohide>\n          <Toast.Body>\n            Connected to board #<b>{this.state.boardId}</b>\n          </Toast.Body>\n        </Toast>\n        <center>\n          Send text to board #<b>{this.state.boardId}</b><br/><small>or <a onClick={() => this.setState({boardId: ''})} className=\"reconnect\">reconnect</a></small><br/><br/>\n          <Form.Control size=\"lg\" as=\"textarea\" type=\"textarea\" id=\"text\" placeholder=\"Text goes here\" style={{ width: '1000 !important', height: '50%', maxHeight: 600, maxWidth: 1000 }} onKeyDown={onKeyDownSend} rows=\"5\"/>\n          <Button variant=\"primary\" size=\"lg\" onClick = {sendMessage} style={{ marginTop: 20, width: '30%', maxWidth: 400, marginLeft: 230 }}>Send</Button>\n          <Button variant=\"outline-primary\" size=\"lg\" onClick = {() => this.setState({ boardId: ''})} style={{ position: 'absolute', height: 60, width: 60, top: 10, left: 10, borderRadius: 50}}>&lt;</Button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Sender;\n","import React from 'react';\n\n\nconst NotFound = () => {\n  return (\n    <div>\n      <center>\n        <h2> Not Found </h2>\n        <p> The page you're looking for does not exists. </p>\n      </center>\n    </div>\n  );\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport Board from \"./components/Board\";\nimport Sender from \"./components/Sender\";\nimport NotFound from \"./components/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/board\" component={Board} />\n          <Route exact path=\"/sender\" component={Sender} />\n          <Route exact component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}