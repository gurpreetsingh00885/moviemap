{"version":3,"sources":["components/Home.jsx","components/SearchResult.jsx","components/NotFound.jsx","components/MovieDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","state","text","search","evt","props","history","push","key","onTextChange","document","getElementById","value","setState","style","textAlign","Jumbotron","margin","InputGroup","size","className","maxWidth","marginTop","FormControl","placeholder","aria-label","aria-describedby","id","onChange","this","onKeyDown","event","Append","Button","variant","disabled","onClick","Component","MovieCard","Card","marginBottom","Body","Subtitle","float","data","release_year","Title","title","Container","Row","Col","actors","length","name","director","writer","Link","preventDefault","href","locations","SearchResult","query","match","params","searching","axios","get","then","response","console","log","catch","error","padding","display","width","background","height","Spinner","position","left","right","top","bottom","animation","role","ListGroup","map","movieObj","index","NotFound","MovieDetail","movie","componentDidMount","location","address","result","lat","lon","distributor","Accordion","Toggle","cursor","as","Header","eventKey","setTimeout","refs","leafletElement","invalidateSize","updateMapSize","Collapse","Map","zIndex","center","zoom","ref","TileLayer","url","attribution","Marker","lng","window","open","undefined","opacity","lineHeight","color","App","exact","path","component","render","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.724bbd2c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nclass Home extends Component {\n  state = {\n    text: \"\"\n  }\n\n  search = evt => {\n    this.props.history.push(`/search/${this.state.text}`, {key: this.state.text});\n  }\n\n  onTextChange = evt => {\n    var text = document.getElementById('text').value;\n    this.setState({ text  });\n  }\n\n  render() {\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter' && this.state.text !== '') {\n        this.search();\n      }\n    }\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <Jumbotron>\n          <h1>Movie Map</h1>\n          <br/>\n          <p>\n            Wanna find the spots your favorite movie was shot at?\n            You're in luck!\n          </p>\n        </Jumbotron>\n        <br/>\n        <br/>\n        Lets get you started!\n        <center style={{ margin: 20 }}>\n          <InputGroup size=\"lg\" className=\"mb-3\" style={{ maxWidth: 600, marginTop: 30 }}>\n              <FormControl\n                placeholder=\"Enter Movie Name\"\n                aria-label=\"Word\"\n                aria-describedby=\"basic-addon2\"\n                id=\"text\"\n                onChange={this.onTextChange}\n                onKeyDown={onKeyDown}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" disabled={this.state.text === \"\"} onClick={this.search}>Go</Button>\n              </InputGroup.Append>\n            </InputGroup>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst MovieCard = (props) => {\n  const openMovieDetail = (event) => {\n    event.preventDefault();\n    props.history.push(`/movie/${props.data.id}/`);\n  };\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Card.Body>\n        <Card.Subtitle className=\"mb-2 text-muted\" style={{ float: 'right' }}>{props.data.release_year}</Card.Subtitle>\n        <Card.Title>{props.data.title}</Card.Title>\n          <Container>\n            <Row style={{ marginBottom: 10 }}>\n              <Col>\n                <b>Cast</b> <br/>\n                {props.data.actors.length >= 1 && <span>{props.data.actors[0].name}</span>}\n                {props.data.actors.length >= 2 && <span>{props.data.actors[0].name && \",\"} {props.data.actors[1].name}</span>}\n                {props.data.actors.length >= 3 && <span>{props.data.actors[1].name && \",\"} {props.data.actors[2].name}</span>}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <b>Director</b> <br/>\n                {props.data.director && props.data.director.name}\n              </Col>\n              <Col>\n                <b>Writer</b> <br/>\n                {props.data.writer && props.data.writer.name}\n              </Col>\n            </Row>\n          </Container>\n        <Card.Link style={{ float: 'right' }} onClick={openMovieDetail} href=\"\">{props.data.locations.length} Locations</Card.Link>\n      </Card.Body>\n    </Card>\n  );\n}\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    var query = this.props.match.params.query;\n    this.state = { text: query, searching: true, data: [] };\n  }\n\n  onTextChange = evt => {\n    var text = document.getElementById('text').value;\n    this.setState({ text  });\n  }\n\n  search = evt => {\n    this.props.history.push(`/search/${this.state.text}`, {key: this.state.text});\n  }\n\n  componentDidMount() {\n    axios.get(`/api/search/${this.state.text}/`)\n      .then((response) => {\n        this.setState({searching: false, data: response.data});\n        console.log(response.data);\n      })\n      .catch((error) => {\n        this.setState({searching: false})\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter' && this.state.text !== '') {\n        this.search();\n      }\n    }\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div style = {{ padding: 20, margin: 'auto', display: 'inline-block', maxWidth: 640, width: '100%', textAlign: 'justify'}}>\n          <h1 style={{ textAlign: 'center' }}> MovieMap </h1>\n          <InputGroup size=\"lg\" className=\"mb-3\" style={{ marginTop: 30, maxWidth: 600 }}>\n            <FormControl\n              placeholder=\"Enter Movie Name\"\n              aria-describedby=\"basic-addon2\"\n              id=\"text\"\n              onChange={this.onTextChange}\n              onKeyDown={onKeyDown}\n              value={this.state.text}\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\" disabled={this.state.text===\"\"} onClick={this.search}>Go</Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <div style={{ background: '', height: '100%', width: '100%', maxWidth: 600, marginTop: 40}}>\n            {\n              this.state.searching &&\n              <Spinner style={{position: 'absolute', left: 0, right: 0, margin: 'auto', top: 0, bottom: 0}} animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            }\n            { !this.state.searching &&\n              <div>\n                <b>Results</b><br/><br/>\n                <ListGroup>\n                  { this.state.data.length === 0 &&\n                    <div>\n                      <h4> Nothing Found </h4>\n                    </div>\n                  }\n                  {\n                    this.state.data.map(\n                      (movieObj, index) => <MovieCard data={movieObj} key={index} history={this.props.history}/>\n                    )\n                  }\n                </ListGroup>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React from 'react';\n\n\nconst NotFound = () => {\n  return (\n    <div style={{ marginTop: 50 }}>\n      <center>\n        <h2> Not Found </h2><br/>\n        <p> The page you're looking for does not exists. </p>\n      </center>\n    </div>\n  );\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button'\nimport { Map, Marker, TileLayer } from 'react-leaflet';\n\nclass MovieDetail extends Component {\n  state = { movie: null }\n\n  componentDidMount = () => {\n    axios.get(`/api/movie/${this.props.match.params.id}/`)\n      .then((response) => {\n        response.data.locations.map((location, index) => {\n          axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${location.address}`)\n          .then((result) => {\n            var movie = this.state.movie;\n            if (result.data.length) {\n              movie.locations[index].lat = result.data[0].lat;\n              movie.locations[index].lon = result.data[0].lon;\n            }\n            this.setState({movie});\n          })\n          .catch((error) => console.log(error));\n          return 0;\n        });\n        this.setState({searching: false, movie: response.data});\n        return 0;\n      })\n      .catch((error) => {\n        this.setState({searching: false})\n        this.props.history.push('/404/')\n      });\n  }\n\n  render() {\n    const { movie } = this.state;\n    const updateMapSize = (index) => {\n      setTimeout(() => \n        this.refs[`map${index}`].leafletElement.invalidateSize()\n        , 200)\n    }\n    const openGoogleMaps = (lat, lng) => {\n      window.open(`http://maps.google.com/maps?q=${lat},${lng}`)\n    }\n\n    if (!movie)\n      return (\n        <Spinner style={{position: 'absolute', left: 0, right: 0, margin: 'auto', top: 0, bottom: 0}} animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )\n    return (\n      <div style={{ textAlign: 'center', padding: 20, maxWidth: 640, margin: 'auto' }}>\n        <h2>{movie.title}</h2>\n        <span className=\"mb-2 text-muted\"> {movie.release_year} </span>\n        <hr/><br/>\n        <div style={{ textAlign: 'initial' }}>\n          <Container>\n            <Row style={{ marginBottom: 10 }}>\n              <Col>\n                <b>Cast</b> <br/>\n                {movie.actors.length >= 1 && <span>{movie.actors[0].name}</span>}\n                {movie.actors.length >= 2 && <span>{movie.actors[0].name && \",\"} {movie.actors[1].name}</span>}\n                {movie.actors.length >= 3 && <span>{movie.actors[1].name && \",\"} {movie.actors[2].name}</span>}\n              </Col>\n              <Col>\n                <b>Distributor</b> <br/>\n                {movie.distributor && movie.distributor.name}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <b>Director</b> <br/>\n                {movie.director && movie.director.name}\n              </Col>\n              <Col>\n                <b>Writer</b> <br/>\n                {movie.writer && movie.writer.name}\n              </Col>\n            </Row>\n          </Container>\n          <br/>\n          <hr/><br/>\n          <b> Locations </b> ({movie.locations.length}) <br/><br/>\n          <Accordion>\n            {\n              movie.locations.map((location, index) =>\n                <Card key={index}>\n\n                  <Accordion.Toggle style={{ cursor: 'pointer' }} as={Card.Header} eventKey={index} onClick={() => updateMapSize(index)}>\n                    {location.address}\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={index}>\n                    <Card.Body style={{ padding: 0, height: '300px'}}>\n                      <Map style={{ zIndex: '0', height: '100%', width: '100%', margin: 0 }} center={[location.lat || 10, location.lon || 10]} zoom={13} ref={`map${index}`}>\n                        <TileLayer\n                          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                        />\n                        <Marker position={[location.lat || 10, location.lon || 10]}>\n                        </Marker>\n                      </Map>\n                      <Button style={{ zIndex: '1', position: 'absolute', bottom: 5, right: 5}} onClick={() => openGoogleMaps(location.lat || 10, location.lon || 10)}>Navigate</Button>\n                      {\n                        location.lat === undefined &&\n                          <div style={{ width: '100%', height: '100%', background: 'black', zIndex: '2', position: 'absolute', opacity: 0.6, top: 49, left: 0, textAlign: 'center', lineHeight: '300px'}} >\n                            <span style={{ color: 'gray' }}>\n                            Unable to load address\n                            </span>\n                          </div>\n                      }\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n                )\n            }\n          </Accordion>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetail;\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport SearchResult from \"./components/SearchResult\";\nimport NotFound from \"./components/NotFound\";\nimport MovieDetail from \"./components/MovieDetail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/search/:query\" render={(props) => (\n  <SearchResult key={props.match.params.query} {...props} />)} />\n          <Route exact path=\"/movie/:id\" component={MovieDetail} />\n          <Route exact component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}